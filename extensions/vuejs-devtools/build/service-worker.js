(()=>{const e={};function n(e){return""+ +e===e}function t(n){chrome.scripting.executeScript({target:{tabId:n},files:["build/proxy.js"]},(t=>{t||e[n].devtools.postMessage("proxy-fail")}))}function o(n,t,o){function s(e){if("log"===e.event)return console.log(`tab ${n}`,e.payload);o.postMessage(e)}function a(e){if("log"===e.event)return console.log(`tab ${n}`,e.payload);t.postMessage(e)}function i(){t.onMessage.removeListener(s),o.onMessage.removeListener(a),t.disconnect(),o.disconnect(),e[n]=null}t.onMessage.addListener(s),o.onMessage.addListener(a),t.onDisconnect.addListener(i),o.onDisconnect.addListener(i)}chrome.runtime.onConnect.addListener((s=>{let a,i;n(s.name)?(a=s.name,i="devtools",t(+s.name)):(a=s.sender.tab.id,i="backend"),e[a]||(e[a]={devtools:null,backend:null}),e[a][i]=s,e[a].devtools&&e[a].backend&&o(a,e[a].devtools,e[a].backend)})),chrome.runtime.onMessage.addListener(((e,n)=>{if(n.tab&&e.vueDetected){const t=e.nuxtDetected?".nuxt":"";chrome.action.setIcon({tabId:n.tab.id,path:{16:chrome.runtime.getURL(`icons/16${t}.png`),48:chrome.runtime.getURL(`icons/48${t}.png`),128:chrome.runtime.getURL(`icons/128${t}.png`)}},(()=>{})),chrome.action.setPopup({tabId:n.tab.id,popup:chrome.runtime.getURL(e.devtoolsEnabled?`popups/enabled${t}.html`:`popups/disabled${t}.html`)},(()=>{}))}"vue-take-screenshot"===e.action&&"devtools_child"===n.envType&&browser.tabs.captureVisibleTab({format:"png"}).then((n=>{browser.runtime.sendMessage({action:"vue-screenshot-result",id:e.id,dataUrl:n})}))}))})();